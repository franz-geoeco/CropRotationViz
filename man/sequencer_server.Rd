% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sequencer.R
\name{sequencer_server}
\alias{sequencer_server}
\title{Crop Sequence Builder Server Logic}
\usage{
sequencer_server(
  input,
  output,
  session,
  app_data,
  output_dir = NA,
  common_column = NA,
  preview = TRUE,
  vector_file = TRUE
)
}
\arguments{
\item{input}{Shiny input object containing UI input values}

\item{output}{Shiny output object for rendering UI elements}

\item{session}{Shiny session object managing the current user session}

\item{app_data}{List containing application configuration and reference data:
\itemize{
\item{Input_App_data}{List containing:
\itemize{
\item{codierung_all}{Data frame mapping crop codes to names and classifications}
\item{crop_codes}{List defining crop code hierarchies and aggregations}
\item{display_names}{Named vector mapping internal codes to user-friendly names}
\item{EZG}{Additional reference data for crop classification}
}
}
}}

\item{output_dir}{Character string specifying default output directory path. Default: NA}

\item{common_column}{Character string specifying a default column for crop identification across files. Default: NA}

\item{preview}{logical. If True (default) you get a snapshot as png from your processed data as sankey chart in PNG format.}

\item{vector_file}{logical. If True (default) you will get a vector file as an additional output with all intersected and aggregated field data.}
}
\value{
Reactive expression containing a list of processed files with their metadata:
\itemize{
\item{sf_object}{Simple features object containing spatial data}
\item{selected_column}{Name of column containing crop information}
\item{selected_year}{Year assigned to the dataset}
\item{filepath}{Original file path}
}
}
\description{
Implements the server-side logic for analyzing and managing agricultural crop rotation sequences.
Provides comprehensive data processing, spatial analysis, and visualization capabilities for multi-year
crop rotation patterns.
}
\details{
The server component implements several key functionalities:
\itemize{
\item{Data Management}{
\itemize{
\item Dynamic file loading and validation for multiple spatial formats
\item Automatic column detection and mapping
\item Year assignment and sequence tracking
\item Interactive map visualization with bounding box display
}
}
\item{Spatial Processing}{
\itemize{
\item Support for multiple spatial file formats (.shp, .geojson, .fgb, .gpkg, .sqlite)
\item Two intersection methods: complete (preserving all areas) and fast (optimized for performance)
\item Optional crop class aggregation based on national coding system
\item Area calculations and spatial transformations
}
}
\item{Progress Tracking}{
\itemize{
\item Real-time validation feedback
\item File loading status updates
\item Processing progress indicators
\item Error handling and notifications
}
}
\item{Output Generation}{
\itemize{
\item Multiple export format options (Shapefile, GeoPackage, FlatGeobuf)
\item Comprehensive metadata documentation
\item Sankey diagram visualization of crop sequences
\item RData file with processed results
}
}
}
}
\section{Processing Workflow}{

The server follows a structured workflow:
\enumerate{
\item File validation and loading
\item Column mapping and year assignment
\item Spatial intersection processing
\item Optional crop class aggregation
\item Area calculations and statistics
\item Output file generation
\item Visualization creation
}
}

\section{Performance Considerations}{

\itemize{
\item Automatic detection and warning for large datasets (>100,000 features)
\item Memory-efficient processing for spatial operations
\item Progress tracking for long-running operations
\item Optimized intersection methods for different use cases
}
}

\examples{
\dontrun{
# Basic server initialization
server <- function(input, output, session) {
  sequencer_server(input, output, session, app_data)
}

# Server with custom output directory and column mapping
server <- function(input, output, session) {
  sequencer_server(
    input, 
    output, 
    session, 
    app_data,
    output_dir = "path/to/output",
    common_column = "crop_code"
  )
}
}

}
\keyword{internal}
