% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{viz_server}
\alias{viz_server}
\title{Crop Rotation Visualization Server Logic}
\usage{
viz_server(input, output, session, app_data, input_dir)
}
\arguments{
\item{input}{Shiny input object}

\item{output}{Shiny output object}

\item{session}{Shiny session object}

\item{app_data}{List containing application data including crop mappings and settings}
}
\value{
A Shiny server function that manages the complete visualization workflow
}
\description{
Implements comprehensive server-side logic for the crop rotation visualization
application. Handles data loading, transformations, and creates reactive visualizations
including Sankey diagrams, tables, and summary plots.
}
\section{Data Loading}{

Handles the loading and validation of RData files containing:
\itemize{
\item CropRotViz_intersection - Main rotation data
\item cropping_area - Area calculations
\item Crop_choices - Available crop choices
\item District_choices - Available district choices
\item EZG_choices - Available river basin choices
}
}

\section{Visualization Components}{

Creates and manages multiple visualization types:
\itemize{
\item Percentage Plots:
\itemize{
\item Area distribution visualization
\item Dynamic updates based on selection
}
\item Sankey Diagrams:
\itemize{
\item Crop rotation flow visualization
\item Crop-specific pattern analysis
}
\item Data Tables:
\itemize{
\item Color-coded rotation summaries
\item Interactive filtering and sorting
}
\item Plotly Integration:
\itemize{
\item Interactive Sankey diagrams
\item Custom styling and layout
}
}
}

\section{Reactive Flow}{

\itemize{
\item Data Loading Stage:
\itemize{
\item File validation
\item Environment setup
\item Variable checking
}
\item Data Processing Stage:
\itemize{
\item Rotation data transformation
\item Area calculations
\item Color mapping
}
\item Visualization Stage:
\itemize{
\item Plot generation
\item Table formatting
\item Interactive updates
}
}
}

\examples{
\dontrun{
# Run the complete Shiny application
shinyApp(ui = ui, server = viz_server)
}

}
