% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{handle_diversity_mapping}
\alias{handle_diversity_mapping}
\title{Calculate and Map Diversity Metrics with Error Handling}
\usage{
handle_diversity_mapping(
  list_intersect_with_borders,
  CropRotViz_intersection,
  agg_cols,
  Districts,
  EZGs = NULL,
  AOIs = NULL
)
}
\arguments{
\item{list_intersect_with_borders}{List containing intersection data with different boundary types
Must contain either 'EZG_inter' or 'borders_inter' elements}

\item{CropRotViz_intersection}{Data frame containing crop rotation visualization data}

\item{agg_cols}{Character vector of column names to use for aggregation}

\item{Districts}{sf object containing district boundaries}

\item{EZGs}{sf object containing ecological zone boundaries (optional)}

\item{AOIs}{sf object containing areas of interest boundaries (optional)}

\item{min_rows}{Minimum number of rows required for sufficient data (default: 9)}

\item{min_years}{Minimum number of years required for sufficient data (default: 3)}
}
\value{
Returns either:
- A spatial object with diversity metrics if successful
- NULL if warnings occurred during processing
- NA if errors occurred or insufficient data was available
}
\description{
different administrative and ecological boundaries. It includes comprehensive error
handling and data validation.
}
\examples{
\dontrun{
# Basic usage with only Districts
result <- handle_diversity_mapping(
  list_intersect_with_borders = list(borders_inter = borders_data),
  CropRotViz_intersection = crop_data,
  agg_cols = c("year", "crop_type"),
  Districts = district_sf
)

# Usage with all boundary types
result_full <- handle_diversity_mapping(
  list_intersect_with_borders = list(
    EZG_inter = ezg_data,
    borders_inter = borders_data
  ),
  CropRotViz_intersection = crop_data,
  agg_cols = c("year", "crop_type"),
  Districts = district_sf,
  EZGs = ezg_sf,
  AOIs = aoi_sf
)
}

}
